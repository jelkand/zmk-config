/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define FNC 3

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
    behaviors {
        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LSHFT>, <&kp CAPS>;
        };
    };
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &kp TAB     &kp Q       &kp W       &kp E       &kp R       &kp T       &kp Y       &kp U       &kp I       &kp O     &kp P       &kp BSPC  
                &kp ESC     &kp A       &kp S       &kp D       &kp F       &kp G       &kp H       &kp J       &kp K       &kp L     &kp SEMI    &kp SQT
                &td0        &kp Z       &kp X       &kp C       &kp V       &kp B       &kp N       &kp M       &kp COMMA   &kp DOT   &kp SLASH   &mt RSHFT ENTER
                &kp FNC     &kp LCTRL   &kp LALT    &kp LGUI    &mo LWR     &kp SPACE   &kp SPACE   &mo RSE     &kp LEFT    &kp DOWN  &kp UP      &kp RIGHT
            >;
        };

        lower_layer {
            bindings = <
                &kp TILDE   &kp EXCL    &kp AT      &kp HASH    &kp DLLR    &kp PRCNT   &kp CARET   &kp AMPS    &kp STAR    &kp LPAR     &kp RPAR        &kp DEL
                &trans      &trans      &trans      &trans      &trans      &trans      &trans      &kp UNDER   &kp PLUS    &kp LBRC     &kp RBRC        &kp PIPE
                &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans       &trans          &kp C_PP
                &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &kp C_PREV  &kp C_VOL_DN &kp C_VOL_UP    &kp C_NEXT                    
            >;
        };

        raise_layer {
            bindings = <
                &kp GRAVE   &kp N1      &kp N2      &kp N3      &kp N4      &kp N5      &kp N6      &kp N7      &kp N8      &kp N9      &kp N0          &kp BSPC
                &trans      &kp LEFT    &kp DOWN    &kp UP      &kp RIGHT   &trans      &trans      &trans      &kp MINUS   &kp LBKT    &kp RBKT        &kp BSLH
                &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &kp LBKT    &kp RBKT    &kp C_VOL_UP    &trans
                &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &kp C_VOL_DN    &trans                    
            >;            
        };

        function_layer {
            bindings = <
                &bootloader     &kp F1          &kp F2          &kp F3          &kp F4          &kp F5          &kp F6          &kp F7      &kp F8      &kp F9      &kp F10     &trans
                &trans          &trans          &trans          &trans          &trans          &trans          &kp C_AC_SEARCH &trans      &kp MINUS   &kp F11     &kp F12     &trans
                &bt BT_CLR      &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4    &trans          &trans      &trans      &trans      &trans      &trans
                &out OUT_BLE    &out OUT_USB    &out OUT_TOG    &trans          &trans          &trans          &trans          &trans      &trans      &trans      &trans      &trans                    
            >;         
        };
    };
};
